<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAgEAAAAAAAD/7gAOQWRvYmUAZAAAAAAB/9sAQwAGBAQEBQQGBQUGCQYFBgkLCAYG
        CAsMCgoLCgoMEAwMDAwMDBAMDg8QDw4MExMUFBMTHBsbGxwfHx8fHx8fHx8f/9sAQwEHBwcNDA0YEBAY
        GhURFRofHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8IAEQgB
        KgCvAwERAAIRAQMRAf/EABsAAQADAQEBAQAAAAAAAAAAAAAEBQYDAgEH/8QAMBAAAQMCBQMDAwQDAQEA
        AAAAAQACAwQFIDAREhMQQDEhIhUyFBZQYHAGIzM1JSb/xAAZAQEAAwEBAAAAAAAAAAAAAAAAAgMEAQX/
        xABIEQACAAMDBQoLBQUJAAAAAAABAgARAyExEiBBURMEMEBhkaHB0SIyMxDwcYGx4UJScqIjYrJzFDRQ
        ktIkBWBw8YLCU5NUJf/EACMSAAAFBAIDAQEAAAAAAAAAAABAASExEFARYSBgMHBRIhL/xAAsEwEAAQIE
        BAYDAAMBAAAAAAABEQAhMUFRYSAw8HEQQIGhsdGRwfFQYOFw/9oADAMBAAIQAxAAAAH9UAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB47zKbMPjvPp9NTj3doyAAAAAAAGO3efqse3vGY8d5jt3n
        7TB6IAAAAAAAymzDq8e4AUOnLZU3TIWAAAAAAAZTZh1ePcAKDTltKbpcLAAAAAAAMjtwX+bVPrtHHsch
        uwbXB6IAAAAAAAGX2Yo0oD1zurx7enJAAAAAAAAAAAAAAAAAADMa8XGUQANXj3eudAAAAAAApr89zRoA
        FNfntqb/AHzoAAAAAAFVdRQ6cumybese5Tbhtab77NqAAAAAAAAH556fk8ZR/RfL9bpyQAAAAAAAFbbT
        m9ePSZNnXncxrx6HLrs6rgAIUbZXa/feAAAAUWjLe59QAzmrJoM2r3zoAp4aZna5kqgAAAAM3qx11tW1
        wejWW02dVwAFfG7o5MlUAAAAKm6j6V1tOmybaLRls6rpULAIkbIfLZsqpXawAAABWW0eOq+2nTZNuc1Z
        LrPokxmBH5OLyyb2rr2IAAAGb1Y9Jl2Z3VkpL80+u2XCzR5dYAixs5u/SbKoAAADG7vP0ObUABYVW/XQ
        I/J8OT6Iy5VgAAAYj0PNvM+kAC6z6ProAiRs69j27EAAADL68WoybQAAABXRumdr69iAAAABwlCDZWBa
        U3fXQPHO8kvbnXsQAAABBsqz+nLxlG7z6aLRl2uD0froHLkoPLZfa5HYAAAAClvzTq7ae/Po8uuovolw
        nNrtA5clXxulyrldrAAAAHlypvosarcrsxcux2eH0ffOgc+dqY6Z3apkqgAAAAABHlDvGX10CJGzw7I7
        Dt2IAAAAAAzurJd59HeMwBR165HYWk84AAAAAAzurJd59HeMwPh552PycuVYAAAGY14uMogDl2Ouxb+n
        JAeOd4J9UevYgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        f//aAAgBAQABBQL9uPe1jZLzPM/7f+wyL7b+wMQu9ZTuimjmj7CsMlwr4YIoY+j2Me3abVXdhYBujwXy
        MPt1G8yUmfYzxnBfJAy3UbDHSZ9zimpaqkrYKqPpLNFExhfda3saixxl+z+xRL/6N6ZZJpXxxxxs/Rpr
        BTSy/jlKvxylX45Sr8cpV+OUqY3a3PhutM+fBW3WmpUx25mfWW2mqgJblbVS1lPUsnqIYGPr66vdRWin
        p+zuBomVEHHLWMYxjOxrLhTUo/8ATuio7fTUraqjp6lnHcbWqO401W3C6rYHh4LsmK0U4qMFZZopSzcG
        YJI5lCHcmXUXgCWWuvMRU9c2GpwguhMIeZMq6zOhoLZSsp6S+fQr1EH0FLJy03Wd21CWmkMHFl3OAz0N
        sqm1FJfPoV7qAylpouKn6yiXWE1QDDJlWuWV9Yqm2SCatN4lH3d9lVFanMlwVDn7fsoFCXCTJt1RBDW/
        I0C+RoF8jQL5GgXyNAgQR1niMjOaqUEbwcmhoqaprfhbYvhbYvhbYvhbYvhbYgABgdVQtdHK2TKtIP3u
        UwyxuY9zsyWeGJfKW9fKW9fKW9Agjq5u5OgYSyNrMuuqPt6WitLZ219DSQ1j7Pbng0VPRTAADrJybfvm
        tdFz5d5YX26jkElJfQRTAgi7hpt1C4uo+sjXOaRQMUILTlOaHNt9HLSCeFk0MdbWW9sktZdSxoYzq94a
        phIxQh5kzp6iGnjBBHWoi5B9nEo4mx59/wD+fB/pwSwNcKMQCTOv/wDz4P8AT1JAW9ijkLqjJmt9zdL8
        bdl8bdl8bdl8bdlJZ7jK2Nu1nV7GPH2lKmRRx/wV/9oACAECAAEFAv26ItFqxasXGCiOxb7QTrg+sdhN
        hi8u858uGIervOew6hzdOoC+gdiJV7F7FyrX9HExXOVzlc5XOVznsTGcLYyexa8haByc3RAarYGp0mvZ
        s10PjsmsJXtanPJTXaL0cnMI7EyemBsnZiNBregbqOxjHq92pi6RH1cPXsGHQvboYukQ9XH1z5B6IPTd
        q2sTpMWmW8ajYVsK2FbCth7FziByuXK5crlyuXK7sZPHbgLjK4yuM9k0al0miY4kchW4uxa5kfl3mLyo
        /LvPYvdqgdFtDloGdsBri07CHycQz4fJ7APat7Vvat7VvahIP4R//9oACAEDAAEFAv26ZdVo9bXrlIQO
        vYu9xA0wfQewhwzD2t8Z8OGY+1vjPkGha7XqTovrPYuhX+Rf5FxaoD9HMIXAFwBcAXAFwDsRINcD5AOx
        dGCtXMTXAonRby5MiA7N+mo89k54C9z01gCc0Fe5ia8HFtyxENcDosQIRzDKi9/Qv0OHyjlyHQRt0E3S
        UejT6dWrQo5cg1EbtRN0mPo0enUI6I5UZ9U6NO3FbnpseFq3lHKY7Q7wt4W8LeFvGEFaBE5TGgniauJq
        4mriauJuLaiMqPzleUcwnRcjVyNXI3FuROW86BseqewA8TVsDcIWxHTLl+lp9JvCl+lnjqF7kcxjdERq
        t5aiS/EEc8nTC0reic+b6RhBT9c+b6Rh0RHpkljlxuXG5cblxuRichg1W4on+Cv/2gAIAQICBj8C669W
        JZ47s+S2OOyT1bqu6uUeB+Sm67tT9ASmFrhCKFkLJbsIFpu1sN9TgQIECBHpH//aAAgBAwIGPwLrrVcl
        jjqzqhb+k46JNV79gv8AUqxRpH6KfEr9QlnixNugLTKVys88+JfHPjUstuyoSjxy0Wz58KNXN7BIkSJE
        ifSP/9oACAEBAQY/Av7OFmMlF5MGnsFHWfbPj6Ym1ZafBZ/pBiYrq/B/iIC7fQkPfXxkYFSm2JDcd4/k
        kMqFK2sRAp0lwqPCVcYlN4MLI/ydc3e6fVvGvXPaqVLfTz5LnOhDDjlzxRc3lFnxbw2nZTfTefNzZLjO
        5CjjnzRRQ3qgB4t4D+oUBMXVljFTNvtLnHhL1GCqM5gPKWx0DnzneWt2VzQqcF3qiQZao/y88olJU4ep
        64x7dXNT7I6YCU1wqLgP2O9Q1Hm7FjdnjvH5I7x+SO8fkjvH5I7x+SAugS3g9Bjq6iMVtuMjmOTInHV/
        2xz6IVtInvDriVTNUF8Sqj8xsvv5xGKk09IzjyiMdVsKwaewrq6XtVT05oxt9Wt755hvMHYCw2qd1Ls+
        Pkj/ANV3FTMrWL6oCoAEFwF28vqN1syC+P8Ar7IeXpj6a9bO5vjDVWeg5xE6f8xsnu5x0R9MyfOhvysO
        Fm6wQsLgT45oZc63+fcqm0Vfqu7FgDcJnJ1tA6mveCLoXF2pW5OGkBUTWB75EW4iIeo8g5AGAWyAnL07
        pqdkpmvVF8roptWRaaOwWXiT4KdGopC1ezUzT0ZTKULISWVltvtkYeqy4MQCqpvks7Tx7nVZe1KQ89kI
        AOswDOeExs/4o8Dn2qcmUxSqG9lBPFkJOeCfWKz812aGJLi0iw1OaDgLHTiLH7251aa9qU181sIR20GF
        xwiNn/FHg1Atq1rFXginTzooByFanKYvUmQPphvpr2j7R/hjrqBokZ8w3Lb1dywSpJQTOVrXeA7RsVTU
        1j2l9loRauzT1bYgyWz9MSp7OKX2j64/M7U+t2jNoGSqoZNUbDi0ZyeIRbiJ97E0+OcPRY4sADKxvk07
        /wB3ctv1rhJ1LJ/E0d+nHHfpxx36ccd+nHHfpxxMXZHVOF1OJG4REjs8zpDLh5ZHkhqlSWsfMLgBcNy2
        7Xpiw1OraRezaI7n5m6Y7n5m6Y7n5m6Y7n5m6Y7n5m6YAFwuySvWYi/ArNLy4QYOENZ7ysv3gNy/qH4n
        O25uupZkxFgwK57dMWoU8suYndPquqeUyjv1jv1jv1iYuOQLxIzssic28zsOeLJ+clvTPc6lbOos8psE
        DadtJqVKvWwxseGmBTdsLji6YlqpcImIVdoprV2aoZLVN6nQ0SFwyPpkBuG6NUyEbQbqQtn5DdKCasrb
        lXN58+51ZZpHiMUnGdRFOqL6VQNAIuN0Vp6J8sUGa8os+LIkrYOEXxqCJliMV7HEbptphk1mMLdO8efP
        uZU2g2GHpl8dGc6ekQ9J+y4lGo2igaiJYlVdECilI0dmnN3MBV7KiQyF+0ZRh1ZYa0VAy22YpmcPVZcA
        YKqqb+rO3l3fWVWwppv9EAi43ZCC2WKZkZHjEo7VT/lqfxQcJa33mZvvE7ufiEU/hHoyXqVULMtS2fuT
        zcGGKv5eWqs6wuxWzE93PxCKfwj0ZFsdoRVWc1ULLzz3J2TbCqliVW2wR+tPLH608sfrTyx+tPLGGpte
        JdBnCroEsiTqGGg2x3KfuiOogWd8hL+4r//aAAgBAQMBPyH/AFwKxZtgKbsiybHeLR3Ve5AFD3bg/HTd
        XYi/6+g0ULCnVnyM5O+JMfxgb0SDDB8ur4i1HApGromMp6P08jnWAs7HCqL7FPZVfAUW8J9/IYTGg2/n
        wuD7VPZVZABN4T7+Q9FcCMJdk/Dej2HXcbc/fjjNm6L0jnMB0pc9DyKCIkjiVnhgJX7RDTCJYX+U9L1C
        etSTgwdTtKIOxRpLPBf4cCwQLBc2tvXV/Wur+tdX9a6v611f1oDrhB7EeQg+LmdCdyMOEt0hi+qjKEJI
        0k8g+ezH1a+tKjhsDB74nZtvUC8ce1QjOWbnsGK9qXLgWT0aXp81xwR6L4+SYhnDOrRsMSWZbPaypYBY
        X8zaHYDeilJlYbR5KXzPVv0y7tf0Fns+0qBTPXv1y7FYK7Dt2mlUiF1YPu9xasIJpz9m5xEyCBibgFUn
        G91FXKg6YE2xOVosrXkCM034bRVkLdwwdyiEpAHvF+E8hmdgK5tjhel32W4uk2ury5ji1ZSjHa7H43oa
        cwAt/Uw8LCkZzuPbiPzsZiyDGZbbUjwQQxCxMS4eWo0IMZTJfhodWvNCcdCYK6/o+HsvERh9lp/cDzd7
        8E5Z9Kol5F8s6YPWgyzGCAqxlj4Fd7csYJtWq7PWIprLDPgR7xNdf0fB7dYTG67HtTP+5wX9+C7FLLEd
        wuMrVJJy9yxes02e9v58pnAUUBhBww8MWMW+C/xUj4JGBrDRxNu6fnHtWs3Zvy4umnCWDYMUIYDnJG9G
        SzL/AHQ9Kf7tIICzRV9OVr//AMTEkfmv5ev5ev5ev5ev5egCSrjtwACEIEhqGiWdqiuP6sVJfVHOa8Kx
        MSs6vKxfPkFxiNOKKKKKI2oCBscOW0zLsYsD3o9Azey3HpyiKiDby8PIgyq5CJzbNTFuwvzzKOIjhFLt
        NdY11jXWNAkkJHZ4DuMBccGTGJtS9yuhfgAVMTc4/vsOXZybC6nyNDU4kUAbkxDhllQCt72GUE0tF0qh
        71DkJ0PwggTegQQEBscBdgbkZWzFzvSB+1GbPcYqYWXVg7rF6HLG8R9EF9qwpfzwhPRoy/ZWHzFO3ISt
        mstoB3BFYvFL0X4J/U4kMM4mQ71bEKszhKUusrTyTCGeJhyL2fnlhDDQ1GzR1UQXu5OV6x0gttH0b0N0
        2OnAwT4qOA0jePwPYoZoAOwQcCoSbPui/qh4rRFKAhMiYG0UjyABYlKJCcvPthCFjc7BadqQlbPA2EhV
        iAcxHp4ajwjN7LYenP6brxJBAGsqWsOEFLGZrRpI5l2SwzQR2nn9N14UgJUGrX9wqENWSLN2/ocqVo4L
        xkPQr+1X+1X+1X+1XWP78kpHWUpdiODZMKD8NdC/qprayl+P/Cv/2gAIAQIDAT8h/wBcCaAS4qPKanyr
        OaQYfIx1bhSKXxGKnsvI4g0OFxUwu/kL41HDNVSvIFN9KV38UcKfVeSfC4qXtVvTSCxilOP+HARWwVsF
        bBWwVsFL5ABOJw9ppPIdtrJ2omKnUFF1e0+w8nJ8qpmhSzj5LAa9WmI0uGpx7UxninlrYW4XLNynhaOZ
        blQUvC/hKJlxYUcuQ01Gft4Qd9QI4Gpo5ca+EZ+3hLLIqRPA0TywOx9eBxilR4ONQYs1MYBwvgOUsLT6
        rba22ttrba23hSpaOVGWlblblblblbnFNTyvb/XmFcK2a2a2eKOZbK0gFXQvQedRLWGXGOW4NGFWVqeG
        HRu78NqOWNDfnUyabxRRcTNFnhaOe6g4U8EeQcfCnkTj8hA4Ukg8KLfhgqP/AAr/2gAIAQMDAT8h/wBc
        WKVQZqfOKhzowWgEnkZx8DGjEHik1HdeRvF1eGSjkdvIWbDwwd1GAbeQT8xRm3iAlonZeSDGxqBvV234
        oalzQFj/AA6mZa3mt5rea3mt5oI8grIeHutDbyGM41mKMFoxLTZ2mtXDF8nH8KouPNAGHksd8Aw2sVqM
        CjDeIcUlp5Ugr8Jt7GjDhzFmIpkAYcy9AloETbwiBz4kM16jAY8udoKMB38Ju2pA8AnvSGntU8/1+uXK
        ngGA7+EMM2oAcDM633DT/tQy5TPf+/BJwWs8YVNgRUbicIGLlXVBRsauUUvX7rfK3yt8rfK3zhidq6xR
        YGBypX1+62vmtr5ra+a2vmtr5o4Rv9Cof6PK9/8AfLYBe/rQjOeYOKt6t6t7hGKFt+CpOXKNa5WrBWaU
        yqRZKz4YZ1rPVWlyzKqYNZmjRQupSe3Ao3oVRzeI5aU9uVRIosyd6sURQI4AmmN5yiowGPPMS0cEE9ql
        t+D6qX+B5CwnDDY09/7SgZvIWE4ZVAPXlKeEkkjGgg4BGFb7SOP/AIV//9oADAMBAAIRAxEAABCSSSSS
        SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSJEySSSSSSSTWSSSSSSSSSRSSDSSSSSSSTSSRSSS
        SSSSRaTKSSSSSSSQCrOSSSSSSSSSSSSSSSSSSR220SSSSSSSSSSQSSSSSSSQWc2SSSSSSSSDuySSSSSS
        SRHWaSSNySSSRySQSSHSSSSSR6aSSTSSSSSZWeyRiSSSSSPWRSQjSSSSRwfSSRPSSSSREknySjySSSQA
        AByScySSSRSSSSSXSSSSSS23yTHSSSSSVDfyTWSSSSSPdgyTOSSSSSeleSTnSSSSSSSJyT8ySSSSSSCy
        SJSSSSSSSCyStySSSR22uyTjSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
        SSSSSSSSSSSST//aAAgBAQMBPxD/AFxF7mADFVpyMyVdgJg2t6CjFEvOLt3WtRZQXx3a296jQGxjd+GO
        1FKiV/kRuGY3PIiL9Yy0NJSE6nKg03Z4uaYpmviwyAgDkjSPnBpJAlXcM4szEnyJXY4NF83wlEKg5MKI
        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
        HrUAaHAxKR2r+01i5e7/AOFf/9k=
</value>
  </data>
</root>